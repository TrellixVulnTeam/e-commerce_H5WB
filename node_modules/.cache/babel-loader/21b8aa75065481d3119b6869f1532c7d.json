{"ast":null,"code":"import { initializeApp } from \"firebase/app\"; // Firebase sub-library related to authentication\n\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\"; // Firestore sub-library. doc is to access the documents. getDoc, however, is to set the data of a specific doc, setDoc is to set the data of a specific doc.\n\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\"; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBX0OlTJA8FkDSUXL5pT6wZzl_CsP3hSb4\",\n  authDomain: \"crwn-clothing-db-8e7ad.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-8e7ad\",\n  storageBucket: \"crwn-clothing-db-8e7ad.appspot.com\",\n  messagingSenderId: \"945984912693\",\n  appId: \"1:945984912693:web:78a83fd91c24925a2b607c\"\n}; // Initialize Firebase\n// this 'firebaseApp' variable is an instance of the firebase that link these codes to the instance we created on the firebase.google.com\n//  the link with the firestore, crud operation, and authentication will be done through this instance\n\nconst firebaseApp = initializeApp(firebaseConfig); // We need a provider in order to be able to use the google authentication feature.\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => {\n  return signInWithPopup(auth, provider);\n};\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","err","console","log","createAuthUserWithEmailAndPassword","password"],"sources":["/Users/safintofiq/Desktop/MyMac/PROJECTS_2022/React/e-commerce/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\n// Firebase sub-library related to authentication\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\n// Firestore sub-library. doc is to access the documents. getDoc, however, is to set the data of a specific doc, setDoc is to set the data of a specific doc.\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBX0OlTJA8FkDSUXL5pT6wZzl_CsP3hSb4\",\n  authDomain: \"crwn-clothing-db-8e7ad.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-8e7ad\",\n  storageBucket: \"crwn-clothing-db-8e7ad.appspot.com\",\n  messagingSenderId: \"945984912693\",\n  appId: \"1:945984912693:web:78a83fd91c24925a2b607c\",\n};\n\n// Initialize Firebase\n// this 'firebaseApp' variable is an instance of the firebase that link these codes to the instance we created on the firebase.google.com\n//  the link with the firestore, crud operation, and authentication will be done through this instance\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// We need a provider in order to be able to use the google authentication feature.\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => {\n  return signInWithPopup(auth, provider);\n};\n\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B,C,CACA;;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,EAMEC,0BANF,QAOO,eAPP,C,CASA;;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD,C,CAEA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,wCAFS;EAGrBC,SAAS,EAAE,wBAHU;EAIrBC,aAAa,EAAE,oCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;AACA;AACA;;AACA,MAAMC,WAAW,GAAGlB,aAAa,CAACW,cAAD,CAAjC,C,CAEA;;AACA,MAAMQ,QAAQ,GAAG,IAAIf,kBAAJ,EAAjB;AACAe,QAAQ,CAACC,mBAAT,CAA6B;EAC3BC,MAAM,EAAE;AADmB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGrB,OAAO,EAApB;AACP,OAAO,MAAMsB,qBAAqB,GAAG,MAAM;EACzC,OAAOpB,eAAe,CAACmB,IAAD,EAAOH,QAAP,CAAtB;AACD,CAFM;AAIP,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAvB;AACP,OAAO,MAAMkB,0BAA0B,GAAG,gBACxCC,QADwC,EAGrC;EAAA,IADHC,qBACG,uEADqB,EACrB;EACH,MAAMC,UAAU,GAAGpB,GAAG,CAACgB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;EACA,MAAMC,YAAY,GAAG,MAAMrB,MAAM,CAACmB,UAAD,CAAjC;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBP,QAA/B;IACA,MAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAMzB,MAAM,CAACkB,UAAD,EAAa;QACvBI,WADuB;QAEvBC,KAFuB;QAGvBC,SAHuB;QAIvB,GAAGP;MAJoB,CAAb,CAAZ;IAMD,CAPD,CAOE,OAAOS,GAAP,EAAY;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD;EACF;;EAED,OAAOR,UAAP;AACD,CAxBM;AA0BP,OAAO,MAAMW,kCAAkC,GAAG,OAAON,KAAP,EAAcO,QAAd,KAA2B;EAC3E,IAAI,CAACP,KAAD,IAAU,CAACO,QAAf,EAAyB;EACzB,OAAO,MAAMnC,8BAA8B,CAACiB,IAAD,EAAOW,KAAP,EAAcO,QAAd,CAA3C;AACD,CAHM"},"metadata":{},"sourceType":"module"}